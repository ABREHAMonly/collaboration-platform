# .github/workflows/deploy.yml
name: Deploy to Production

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: collaboration_platform_test
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
        
    - name: Install dependencies
      run: bun install
      
    - name: Run database setup
      run: bun run db:setup
      env:
        DATABASE_URL: postgresql://test_user:test_password@localhost:5432/collaboration_platform_test
        NODE_ENV: test
        JWT_SECRET: test-jwt-secret
        JWT_REFRESH_SECRET: test-refresh-secret
        
    - name: Run tests
      run: bun test
      env:
        DATABASE_URL: postgresql://test_user:test_password@localhost:5432/collaboration_platform_test
        NODE_ENV: test
        JWT_SECRET: test-jwt-secret
        JWT_REFRESH_SECRET: test-refresh-secret
        
    - name: Build application
      run: bun run build
      
    - name: Run linting
      run: bun run lint

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
        
    - name: Install dependencies
      run: bun install
      
    - name: Build application
      run: bun run build
      
    - name: Deploy to Render
      uses: johnbeynon/render-deploy-action@v0.0.8
      with:
        service-id: ${{ secrets.RENDER_SERVICE_ID }}
        api-key: ${{ secrets.RENDER_API_KEY }}